#!/usr/bin/env bash

# Where we're at right now
START_WD=$(pwd -P)

# All the colors we're using for notifications
SWITCH="\033["
RED="${SWITCH}0;31m"
GREEN="${SWITCH}0;32m"
YELLOW="${SWITCH}1;33m"
NORMAL="${SWITCH}0m"

set -e
echo ''

# Print red
error () {
  printf "\r${RED}$1${NORMAL}\n"
  exit
}

# Print green
success () {
  printf "\r${GREEN}$1${NORMAL}\n"
}

# Print yellow
info () {
  printf "\r${YELLOW}$1${NORMAL}\n"
}

install_rbenv () {
  info "Installing rbenv for you..."

  # Fetching rbenv from git
  git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
  echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile.before

  source ~/.bash_profile.before

  if [ $(which rbenv) ]; then
    success "rbenv installed"
    info "fetching ruby-build..."

    cd ~/.rbenv && git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build

    if [[ $? == 0 ]]; then
      success "ruby-build installed"
    fi
  fi
}

fetch_dotfiles () {
  info "Fetching dotfiles..."

  git clone https://github.com/cloverinteractive/dotfiles.git ~/.dotfiles
  cd ~/.dotfiles

  # Setup submodules to get Vundle working
  git submodule init
  git submodule update

  info "Installing ruby..."
  rbenv install

  if [[ $? == 0 ]]; then
    success "ruby installed"
  fi
}

install () {
  info "Installing dotfiles..."

  cd ~/.dotfiles

  # Install the ruby bundler
  gem install bundler && rbenv rehash

  # Install ruby dependecies and run Rake tasks
  bundle install
  rake install

  if [[ $? == 0 ]]; then
    # Reload our new env and move back to HOME
    source ~/.bash_profile

    # Let's move back to where we ran the installer from
    cd $START_WD

    success "dotfiles generated"
  fi
}

install_homebrew () {
  info "Installing Homebrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

  # If installed Homebrew successfully
  if [[ $? == 0 ]]; then
    success "Homebrew installed"

    ## Load homebrew
    echo 'export PATH="/usr/local/bin:/usr/local/sbin:$PATH"' >> ~/.bash_profile.before
    source ~/.bash_profile.before
  fi
}

install_debian () {
  sudo apt-get install build-essential curl git m4 ruby texinfo libbz2-dev libcurl4-openssl-dev libexpat-dev libncurses-dev zlib1g-dev

  if [[ $? == 0 ]]; then
    success "DEBSs installed!"
  else
    error "Could not install required packages."
  fi
}

install_redhat () {
  sudo yum groupinstall 'Development Tools' && sudo yum install curl git m4 ruby texinfo bzip2-devel curl-devel expat-devel ncurses-devel zlib-devel

  if [[ $? == 0 ]]; then
    success "RPMs installed!"
  else
    error "Could not install required packages."
  fi
}

satisfy_linux_deps () {
  info "Trying to install dependencies..."

  if  [[ $(uname -a | grep -i '\(ubuntu\|debian\)') || $(which apt-get) ]]; then
    install_debian
  elif [[ $(uname -a | grep -i '\(fedora\|hat\)') || $(wich yum) ]]; then
    install_redhat
  else
    error "Dependencies not met: Could not find a suitable package manager or packages"
  fi
}

install_linuxbrew () {
  satisfy_linux_deps

  info "Installing Linuxbrew..."
  ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/linuxbrew/go/install)"

  # If installed Linuxbrew successfully
  if [[ $? == 0 ]]; then
    success "Linuxbrew installed"

    ## Load Linuxbrew
    echo 'export PATH="$HOME/.linuxbrew/bin:$PATH"' >> ~/.bash_profile.before
    echo 'export MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"' >> ~/.bash_profile.before
    echo 'export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"' >> ~/.bash_profile.before

    source ~/.bash_profile.before
  fi
}


# Install correct brew if not present
if ! [ $(which brew) ]; then
  if [[ $(uname) == "Darwin" ]]; then
    install_homebrew
  else
    install_linuxbrew
  fi
fi

#if ! [ $(which git) ] ; then install_git; fi
if ! [ $(which rbenv) ]; then install_rbenv; fi

# Fetch dotfiles from github and install
#fetch_dotfiles
#install
