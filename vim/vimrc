" needs to be first line
set nocompatible
filetype off
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'gmarik/Vundle.vim'

Plugin 'kchmck/vim-coffee-script'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-endwise'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-haml'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-surround'
Plugin 'tpope/vim-repeat'
Plugin 'scrooloose/syntastic'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'SirVer/ultisnips'
Plugin 'sjbach/lusty'
Plugin 'godlygeek/tabular'
Plugin 'majutsushi/tagbar'
Plugin 'vim-ruby/vim-ruby'
Plugin 'Lokaltog/vim-powerline'
Plugin 'vim-scripts/nginx.vim'
Plugin 'vim-scripts/AutoTag'
Plugin 'vim-scripts/LargeFile'
Plugin 'mattn/emmet-vim'
Plugin 'pangloss/vim-javascript'
Plugin 'aalvarado/ultisnips-snippets.git'

" Themes
Plugin 'altercation/vim-colors-solarized'
Plugin 'larssmit/vim-getafe'


if filereadable(expand("~/.vimrc.before"))
  source ~/.vimrc.before
endif

set hidden
set number
set ts=2 sts=2 sw=2 expandtab
syntax on

if has("autocmd")
  filetype plugin indent on
endif

:colorscheme koehler

if has('mouse')
  set mouse=a
endif

" Lets use smartcase
set ignorecase
set smartcase

" No wrapping please
set nowrap


" Don't resize split views automatically
set noequalalways

" Always show status line
set laststatus=2

" Handle trailing whitespace, shamelessly taken from http://vimcasts.org/episodes/tidying-whitespace/
function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    " Do the business:
    %s/\s\+$//e
    " Clean up: restore previous search history, and cursor position
    let @/=_s
    call cursor(l, c)
endfunction

autocmd BufWritePre *.rb,*.coffee,*.yml,*.haml,*.erb,*.php,*.java,*.py,*.js :call <SID>StripTrailingWhitespaces() " Run this method on save

if filereadable(expand("~/.vimrc.after"))
  source ~/.vimrc.after
endif

let g:slime_target = "tmux"
" vim: filetype=vim
